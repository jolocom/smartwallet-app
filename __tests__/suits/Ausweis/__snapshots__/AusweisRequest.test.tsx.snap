// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ausweis request screen is displayed according to the designs 1`] = `
<RNCSafeAreaView
  onInsetsChange={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.65)",
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "width": "100%",
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#090909",
            "borderRadius": 20,
            "justifyContent": "center",
            "marginBottom": 10,
            "paddingBottom": 36,
            "paddingHorizontal": 20,
            "paddingTop": 48,
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
            "width": "96%",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "position": "absolute",
              "top": -35,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 35,
                  "height": 70,
                  "width": 70,
                },
                Object {
                  "backgroundColor": "#ffffff",
                },
              ]
            }
            testID="ausweis-logo"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={70}
              bbWidth={70}
              focusable={false}
              height={70}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": 70,
                    "width": 70,
                  },
                ]
              }
              vbHeight={70}
              vbWidth={70}
              width={70}
            >
              <RNSVGGroup>
                <RNSVGDefs>
                  <RNSVGCircle
                    cx={35}
                    cy={35}
                    name="prefix__a"
                    r={35}
                  />
                </RNSVGDefs>
                <RNSVGGroup
                  fill={null}
                  fillRule={0}
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                    ]
                  }
                >
                  <RNSVGMask
                    fill={-1}
                    height="100%"
                    maskContentUnits={1}
                    maskTransform={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    maskUnits={0}
                    name="prefix__b"
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    width="100%"
                    x="0%"
                    y="0%"
                  >
                    <RNSVGUse
                      height={0}
                      href="prefix__a"
                      width={0}
                      x={0}
                      y={0}
                    />
                  </RNSVGMask>
                  <RNSVGPath
                    d="M42.98 28.8c2.15 0 3.9-1.75 3.9-3.9s-1.75-3.9-3.9-3.9-3.899 1.75-3.899 3.9 1.75 3.9 3.9 3.9zm3.519 7.42a1.3 1.3 0 00-1.838 0l-4.28 4.28-9.49-11.866a1.3 1.3 0 00-1.935-.107L13 44.4v1.3c0 .728.572 1.3 1.3 1.3h41.764c.364 0 .676-.156.936-.364L46.499 36.219z"
                    fill={-13948631}
                    fillRule={1}
                    mask="prefix__b"
                    propList={
                      Array [
                        "fill",
                        "fillRule",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "paddingTop": undefined,
                "textAlign": "center",
              },
              Object {
                "color": "rgba(255,255,255,0.85)",
                "fontFamily": "TTCommons-Regular",
                "fontSize": 28,
                "letterSpacing": 0,
                "lineHeight": 32,
              },
              Object {
                "lineHeight": 28,
                "marginBottom": 8,
                "marginHorizontal": 10,
                "marginTop": 14,
              },
            ]
          }
          testID="interaction-title"
        >
          Ausweis.header
        </Text>
        <Text
          style={
            Array [
              Object {
                "paddingTop": undefined,
                "textAlign": "center",
              },
              Object {
                "color": "rgba(255, 255, 255, 0.7)",
                "fontFamily": "TTCommons-Regular",
                "fontSize": 16,
                "letterSpacing": 0,
                "lineHeight": 18,
              },
              Object {
                "paddingHorizontal": 10,
              },
            ]
          }
          testID="ausweis-interaction-description"
        >
          AusweisRequest.description{"serviceName":"ProviderName","interpolation":{"escapeValue":false}}
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="ausweis-requester-link"
        >
          <Text
            style={
              Array [
                Object {
                  "paddingTop": undefined,
                  "textAlign": "center",
                },
                Object {
                  "color": "#5251c1",
                  "fontFamily": "TTCommons-Regular",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 18,
                },
                Object {
                  "marginBottom": 32,
                  "marginTop": 16,
                },
              ]
            }
          >
            ProviderUrl
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                Object {
                  "flex": 0.7,
                  "marginRight": 12,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "justifyContent": "center",
                  "marginVertical": 0,
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="ausweis-cta-btn"
            >
              <BVLinearGradient
                colors={
                  Array [
                    -7268030,
                    -3003031,
                  ]
                }
                endPoint={
                  Object {
                    "x": 1,
                    "y": 0,
                  }
                }
                locations={null}
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 8,
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    Object {
                      "height": 45,
                    },
                  ]
                }
                testID="gradient"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "paddingTop": undefined,
                        "textAlignVertical": "center",
                      },
                      Object {
                        "fontFamily": "TTCommons-Medium",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Object {},
                    ]
                  }
                >
                  AusweisRequest.proceedBtn
                </Text>
              </BVLinearGradient>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                Object {
                  "flex": 0.3,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "justifyContent": "center",
                  "marginVertical": 0,
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="ausweis-ignore-btn"
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 8,
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      false,
                      Object {
                        "marginVertical": 0,
                      },
                    ],
                    Object {
                      "height": 45,
                    },
                    Object {
                      "borderColor": "rgba(143, 146, 161, 0.2)",
                      "borderRadius": 8,
                      "borderWidth": 2,
                    },
                  ]
                }
                testID="non-gradient"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "paddingTop": undefined,
                        "textAlignVertical": "center",
                      },
                      Object {
                        "fontFamily": "TTCommons-Regular",
                        "opacity": 0.8,
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Object {},
                    ]
                  }
                >
                  Interaction.cancelBtn
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`Ausweis review sceen is displayed according to the designs 1`] = `
<RNCSafeAreaView
  onInsetsChange={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0,0,0,0.65)",
        "height": "100%",
        "width": "100%",
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flex": 1,
          "width": "100%",
        }
      }
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#090909",
            "borderRadius": 20,
            "justifyContent": "center",
            "marginBottom": 10,
            "paddingBottom": 36,
            "paddingHorizontal": 20,
            "paddingTop": 48,
            "transform": Array [
              Object {
                "translateY": 1334,
              },
            ],
            "width": "96%",
          }
        }
      >
        <View
          style={
            Object {
              "alignSelf": "center",
              "position": "absolute",
              "top": -35,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 35,
                  "height": 70,
                  "width": 70,
                },
                Object {
                  "backgroundColor": "#ffffff",
                },
              ]
            }
            testID="ausweis-logo"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={70}
              bbWidth={70}
              focusable={false}
              height={70}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": 70,
                    "width": 70,
                  },
                ]
              }
              vbHeight={70}
              vbWidth={70}
              width={70}
            >
              <RNSVGGroup>
                <RNSVGDefs>
                  <RNSVGCircle
                    cx={35}
                    cy={35}
                    name="prefix__a"
                    r={35}
                  />
                </RNSVGDefs>
                <RNSVGGroup
                  fill={null}
                  fillRule={0}
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                    ]
                  }
                >
                  <RNSVGMask
                    fill={-1}
                    height="100%"
                    maskContentUnits={1}
                    maskTransform={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    maskUnits={0}
                    name="prefix__b"
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    width="100%"
                    x="0%"
                    y="0%"
                  >
                    <RNSVGUse
                      height={0}
                      href="prefix__a"
                      width={0}
                      x={0}
                      y={0}
                    />
                  </RNSVGMask>
                  <RNSVGPath
                    d="M42.98 28.8c2.15 0 3.9-1.75 3.9-3.9s-1.75-3.9-3.9-3.9-3.899 1.75-3.899 3.9 1.75 3.9 3.9 3.9zm3.519 7.42a1.3 1.3 0 00-1.838 0l-4.28 4.28-9.49-11.866a1.3 1.3 0 00-1.935-.107L13 44.4v1.3c0 .728.572 1.3 1.3 1.3h41.764c.364 0 .676-.156.936-.364L46.499 36.219z"
                    fill={-13948631}
                    fillRule={1}
                    mask="prefix__b"
                    propList={
                      Array [
                        "fill",
                        "fillRule",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "paddingTop": undefined,
                "textAlign": "center",
              },
              Object {
                "color": "rgba(255,255,255,0.85)",
                "fontFamily": "TTCommons-Regular",
                "fontSize": 28,
                "letterSpacing": 0,
                "lineHeight": 32,
              },
              Object {
                "lineHeight": 28,
                "marginBottom": 8,
                "marginHorizontal": 10,
                "marginTop": 14,
              },
            ]
          }
          testID="interaction-title"
        >
          Ausweis.header
        </Text>
        <Text
          style={
            Array [
              Object {
                "paddingTop": undefined,
                "textAlign": "center",
              },
              Object {
                "color": "rgba(255, 255, 255, 0.7)",
                "fontFamily": "TTCommons-Regular",
                "fontSize": 16,
                "letterSpacing": 0,
                "lineHeight": 18,
              },
              Object {
                "paddingHorizontal": 10,
              },
            ]
          }
          testID="ausweis-interaction-description"
        >
          AusweisRequest.description{"serviceName":"ProviderName","interpolation":{"escapeValue":false}}
        </Text>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="ausweis-requester-link"
        >
          <Text
            style={
              Array [
                Object {
                  "paddingTop": undefined,
                  "textAlign": "center",
                },
                Object {
                  "color": "#5251c1",
                  "fontFamily": "TTCommons-Regular",
                  "fontSize": 16,
                  "letterSpacing": 0,
                  "lineHeight": 18,
                },
                Object {
                  "marginBottom": 32,
                  "marginTop": 16,
                },
              ]
            }
          >
            ProviderUrl
          </Text>
        </View>
        <View
          style={
            Object {
              "flexDirection": "row",
              "width": "100%",
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                Object {
                  "flex": 0.7,
                  "marginRight": 12,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "justifyContent": "center",
                  "marginVertical": 0,
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="ausweis-cta-btn"
            >
              <BVLinearGradient
                colors={
                  Array [
                    -7268030,
                    -3003031,
                  ]
                }
                endPoint={
                  Object {
                    "x": 1,
                    "y": 0,
                  }
                }
                locations={null}
                startPoint={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 8,
                      "justifyContent": "center",
                      "width": "100%",
                    },
                    Object {
                      "height": 45,
                    },
                  ]
                }
                testID="gradient"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "paddingTop": undefined,
                        "textAlignVertical": "center",
                      },
                      Object {
                        "fontFamily": "TTCommons-Medium",
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Object {},
                    ]
                  }
                >
                  AusweisRequest.proceedBtn
                </Text>
              </BVLinearGradient>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                },
                Object {
                  "flex": 0.3,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 8,
                  "justifyContent": "center",
                  "marginVertical": 0,
                  "opacity": 1,
                  "width": "100%",
                }
              }
              testID="ausweis-ignore-btn"
            >
              <View
                style={
                  Array [
                    Array [
                      Object {
                        "alignItems": "center",
                        "borderRadius": 8,
                        "justifyContent": "center",
                        "width": "100%",
                      },
                      false,
                      Object {
                        "marginVertical": 0,
                      },
                    ],
                    Object {
                      "height": 45,
                    },
                    Object {
                      "borderColor": "rgba(143, 146, 161, 0.2)",
                      "borderRadius": 8,
                      "borderWidth": 2,
                    },
                  ]
                }
                testID="non-gradient"
              >
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#ffffff",
                        "paddingTop": undefined,
                        "textAlignVertical": "center",
                      },
                      Object {
                        "fontFamily": "TTCommons-Regular",
                        "opacity": 0.8,
                      },
                      Object {
                        "fontSize": 18,
                      },
                      Object {},
                    ]
                  }
                >
                  Interaction.cancelBtn
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
