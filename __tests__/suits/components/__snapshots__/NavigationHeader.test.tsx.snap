// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation Header renders BackArrowIcon correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "paddingHorizontal": 12,
        "width": "100%",
      },
      Object {
        "justifyContent": "space-between",
      },
      undefined,
    ]
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
    testID="backArrow"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17}
      bbWidth={25}
      focusable={false}
      height={17}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 17,
            "width": 25,
          },
        ]
      }
      vbHeight={17}
      vbWidth={25}
      width={25}
    >
      <RNSVGGroup>
        <RNSVGPath
          d="M24.48 7.438H3.34l5.362-5.469a.536.536 0 00.152-.375V.53A.53.53 0 008.334 0a.516.516 0 00-.369.156L.153 8.124a.539.539 0 000 .752l7.812 7.968c.15.152.372.198.568.116a.53.53 0 00.321-.491v-1.063a.536.536 0 00-.152-.375L3.34 9.562h21.138c.288 0 .521-.237.521-.53V7.968a.526.526 0 00-.52-.531z"
          fill={4294111986}
          fillRule={1}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 12,
      }
    }
    testID="heading"
  />
</View>
`;

exports[`Navigation Header renders CloseIcon correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "paddingHorizontal": 12,
        "width": "100%",
      },
      Object {
        "justifyContent": "space-between",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 12,
      }
    }
    testID="heading"
  />
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
    testID="closeIcon"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="16px"
      bbWidth="16px"
      focusable={false}
      height="16px"
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      vbHeight={16}
      vbWidth={16}
      width="16px"
    >
      <RNSVGGroup>
        <RNSVGGroup
          fill={null}
          fillRule={0}
          name="Screens"
          propList={
            Array [
              "fill",
              "fillRule",
              "stroke",
              "strokeWidth",
            ]
          }
          stroke={null}
          strokeWidth={1}
        >
          <RNSVGGroup
            fill={4294967295}
            fillRule={1}
            matrix={
              Array [
                1,
                0,
                0,
                1,
                -332,
                -26,
              ]
            }
            name="Camera-/-nfc-/-xsmax"
            propList={
              Array [
                "fill",
                "fillRule",
              ]
            }
          >
            <RNSVGPath
              d="M339.234845,34.0024546 L332.152568,41.1342098 C331.955811,41.332342 331.955811,41.6533314 332.152568,41.8514637 C332.250822,41.9506557 332.379827,42 332.508582,42 C332.637587,42 332.766342,41.9506557 332.864596,41.8514637 L340.000125,34.6660845 L347.135654,41.8514637 C347.234158,41.9506557 347.362913,42 347.491668,42 C347.620423,42 347.749428,41.9506557 347.847682,41.8514637 C348.044439,41.6533314 348.044439,41.332342 347.847682,41.1342098 L340.765655,34.0024546 L347.852432,26.8656644 C348.049189,26.6675321 348.049189,26.3465427 347.852432,26.1484104 C347.655674,25.9505299 347.336912,25.9505299 347.140404,26.1484104 L340.000375,33.3388248 L332.859596,26.1486622 C332.662838,25.9507816 332.344326,25.9507816 332.147568,26.1486622 C331.950811,26.3467944 331.950811,26.6677838 332.147568,26.8659161 L339.234845,34.0024546 Z"
              name="Path"
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`Navigation Header renders children correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "paddingHorizontal": 12,
        "width": "100%",
      },
      Object {
        "justifyContent": "space-between",
      },
      undefined,
    ]
  }
>
  <View
    accessibilityState={
      Object {
        "disabled": false,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": 40,
      }
    }
    testID="backArrow"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight={17}
      bbWidth={25}
      focusable={false}
      height={17}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Object {
            "flex": 0,
            "height": 17,
            "width": 25,
          },
        ]
      }
      vbHeight={17}
      vbWidth={25}
      width={25}
    >
      <RNSVGGroup>
        <RNSVGPath
          d="M24.48 7.438H3.34l5.362-5.469a.536.536 0 00.152-.375V.53A.53.53 0 008.334 0a.516.516 0 00-.369.156L.153 8.124a.539.539 0 000 .752l7.812 7.968c.15.152.372.198.568.116a.53.53 0 00.321-.491v-1.063a.536.536 0 00-.152-.375L3.34 9.562h21.138c.288 0 .521-.237.521-.53V7.968a.526.526 0 00-.52-.531z"
          fill={4294111986}
          fillRule={1}
          propList={
            Array [
              "fill",
              "fillRule",
            ]
          }
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 12,
      }
    }
    testID="heading"
  >
    <Text>
      Hello there
    </Text>
  </View>
</View>
`;

exports[`Navigation Header renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": 50,
        "paddingHorizontal": 12,
        "width": "100%",
      },
      Object {
        "justifyContent": "space-between",
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 12,
      }
    }
    testID="heading"
  />
</View>
`;
